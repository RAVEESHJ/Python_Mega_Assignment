Python Assignment

Q1. Why do we call Python as a general purpose and high-level programming language? 
Ans- Python is an object-oriented, high-level programming language. Object-oriented means this language is based around objects (such as data) rather than functions, and high-level means it's easy for humans to understand. 

Q2. Why is Python called a dynamically typed language? 
ANS- Because they are not written in machine-readable language, Python programs need to be processed before machines can run them. Python is an interpreted language. This means that every time a program is run, its interpreter runs through the code and translates it into machine-readable byte code. 

Q3. List some pros and cons of Python programming language? 
The pros of Python 
•	Python is easy to learn and read 
•	Python enhances productivity 
•	Python has a vast collection of libraries 
•	Python is free, open-source, and has a vibrant community 
•	Python is a portable programming language 
•	Python is an interpreted language 
The cons of Python 
•	Poor Memory Efficiency 
•	Slow Speed 
•	Database Access 
•	Weak in Mobile Computing 
•	Runtime Errors 
 
Q4. In what all domains can we use Python? 
Ans-	Uses of Python
•	Web Development.
•	Data Science.
•	Artificial Intelligence and Machine Learning.
•	Enterprise Applications.
•	Education Sector.
•	Web Scraping Applications.
•	Game Development.
•	Software Development.

Q5. What are variable and how can we declare them? 
Ans- variable is a reserved memory location to store values. In other words, a variable in a python program gives data to the computer for processing. Every value in Python has a datatype.
Declaration of Variables. Variables are the basic unit of storage in a programming language. These variables consist of a data type, the variable name, and the value to be assigned to the variable. Unless and until the variables are declared and initialized, they cannot be used in the program

Q6. How can we take an input from the user in Python? 
Ans-
      1.	name = input ("Enter your name: ")   # String Input  
       2.	age = int (input ("Enter your age: ")) # Integer Input  
       3.	marks = float (input ("Enter your marks: ")) # Float Input  
1.	Print ("The name is:", name)  
2.	Print ("The age is:", age)  
3.	Print ("The marks is:", marks)  

Q7. What is the default datatype of the value that has been taken as an input using input() function? 
Ans-	String, everything that you input () will be a string

Q8. What is type casting? 
Ans- Type Casting is the method to convert the variable data type into a certain data type in order to the operation required to be performed by users. In this article, we will see the various technique for typecasting. There can be two types of 	
Type Casting in Python
    Implicit Type Casting
    Explicit Type Casting

Q9. Can we take more than one input from the user using single input() function? If yes, how? If no, why? 
Ans-	Yes. We can take more than 1 input using single input() function by using split() function. 

Q10. What are keywords? 
Ans- Python keywords are special reserved words that have specific meanings and purposes and can't be used for anything but those specific purposes.

Q11. Can we use keywords as a variable? Support your answer with reason. 
Ans- We cannot use keywords as varibale as they are used to define the syntax and structure of the python language. 

Q12. What is indentation? What's the use of indentaion in Python? 
Ans-	Indentation refers to the spaces at the beginning of a code line. Where in other programming languages the indentation in code is for readability only, the indentation in Python is very important. Python uses indentation to indicate a block of code

Q13. How can we throw some output in Python? 
Ans-	The basic way to do output is the print statement. Using print () function. 

Q14. What are operators in Python? 
Special symbols in Python that carry out arithmetic or logical computation. 

Q15. What is difference between / and // operators? 
/ means divion with give the full value whereas // gives on the Quoteint. 

Q16. Write a code that gives following as an output. iNeuroniNeuroniNeuroniNeuron 
ANS-   print('iNeuron'*4) 
 
Q17. Write a code to take a number as an input from the user and check if the number is odd or even. 
ANS-    
         number = int(input("Enter a number: "))
         if (number % 2 == 0):
             print("The number is even.")
         else:
             print("The number is odd.")
 
Q18. What are boolean operator? 
Ans-	Boolean operator is used to represent the truth value of an expression.

Q19. What will the output of the following? 
1 or 0 
1 
0 and 0 
0 
True and False and True 
ANS-   False 

1 or 0 or 0 
ANS- 1 
 
Q20. What are conditional statements in Python? 
These statements guide the program while making decisions based on the conditions encountered by the program. 
 
Q21. What is use of 'if', 'elif' and 'else' keywords? 
Ans-	if - if any condition is satisfied elif - This is Else If if previous condition does not satisfy, need to validate if this gets satisfied. else - If all other conditions does not satisfy, this will be executed. 
 
Q22. Write a code to take the age of person as an input and if age >= 18 display "I can vote". If age is < 18 display "I can't vote". 

          age = int(input("Please enter your age: "))

          if age >= 18:
               print("I can vote")
          else:
               print("I can't vote") 
 
Q23. Write a code that displays the sum of all the even numbers from the given list. 
ANS-          numbers = [12, 75, 150, 180, 145, 525, 50] 
              sum = 0
              for i in numbers:
                  if i % 2 == 0:
                     sum += i
              print(sum)
 
Q24. Write a code to take 3 numbers as an input from the user and display the greatest no as output. 
 ANS-             
                 x=int(input("Enter the first number: "))
                 y=int(input("Enter the second number: "))
                 z=int(input("Enter the third number: "))
                 if(x>=y and x>=z):
                     print("The greatest number is ",x)
                 elif(y>=x and y>=z):
                     print("The greatest number is ",y)
                 else:
                     print("The greatest number is ",z)
 
Q25. Write a program to display only those numbers from a list that satisfy the following conditions 
•	The number must be divisible by five 
•	If the number is greater than 150, then skip it and move to the next number 
•	If the number is greater than 500, then stop the loop 
 ANS-
              numbers = [12, 75, 150, 180, 145, 525, 50] 
              for num in numbers: 
                  if num % 5 == 0 and num <= 150: 
                      print(num) 
                  elif num > 500: 
                      break

Q26. What is a string? How can we declare string in Python? 
ANS - Strings are defined as an array of characters. To create a string, put the sequence of characters inside either single quotes, double quotes, or triple quotes and then assign it to a variable. 
 
Q27. How can we access the string using its index ? 
ANS - Individual characters in a string can be accessed by specifying the string name followed by a number in square brackets ( [] ). 
 
 Q28. Write a code to get the desired output of the following 
string = "Big Data iNeuron" 
desired_output = "iNeuron" 

ANS -   str = "Big Data iNeuron" 
  Print (str [9:16]) 
 
Q29. Write a code to get the desired output of the following 
string = "Big Data iNeuron" 
desired_output = "norueNi" 

ANS-   str = "Big Data iNeuron" 
print(str[16:8:-1]) 
 
Q30. Resverse the string given in the above question. 

 ANS-    str = "Big Data iNeuron" 
 print(str[16::-1]) 

Q31. How can you delete entire string at once? 
 ANS- By using clear ( ) method 
 
Q32. What is escape sequence? 
 ANS- An escape sequence is a sequence of characters that, when used inside a character or string 
 
Q33. How can you print the below string? 
'iNeuron's Big Data Course' 

 ANS-   Str="iNeuron's Big Data Course" 
       print(Str) 
 
Q34. What is a list in Python? 
 ANS- A list can be defined as a collection of values or items of different types. The items in the list are separated with the comma (,) and enclosed with the square brackets []. 
 
Q35. How can you create a list in Python? 
ANS- In Python, a list is created by placing elements inside square brackets [] , separated by commas. A list can have any number of items and they may be of different types (integer, float, string, etc.). A list can also have another list as an item. This is called a nested list. 

Q36. How can we access the elements in a list? 
ANS- List literals are written within square brackets [ ]. Lists work similarly to strings -- use the len() function and square brackets [ ] to access data, with the first element at index 0. 
 
Q37. Write a code to access the word "iNeuron" from the given list. 
lst = [1,2,3,"Hi",[45,54, "iNeuron"], "Big Data"] 

ANS- 		print(lst[4][2]) 
 
Q38. Take a list as an input from the user and find the length of the list. 
 ANS-       lst = [int(i) for i in input().split()]
            print(len(lst))

Q39. Add the word "Big" in the 3rd index of the given list. 
lst = ["Welcome", "to", "Data", "course"] 
ANS- 	 lst = ["Welcome", "to", "Data", "course"]
             lst.insert(2, "big")
             print(lst)

Q40. What is a tuple? How is it different from list? 
 ANS- Tuples are used to store multiple items in a single variable. Tuple is one of 4 built-in data types in Python used to store collections of data, the other 3 are List, Set, and Dictionary,

Q41. How can you create a tuple in Python? 
 ANS- 		t1=(123,"Hello",321) 
          print(t1)

Q42. Create a tuple and try to add your name in the tuple. Are you able to do it? Support your answer with reason. 
 ANS- 	        tuple = ('a', 'b', 'c')

                tuple.add('RAVEESH J')

                This will give you an error because tuples are immutable.
 
Q43. Can two tuple be appended. If yes, write a code for it. If not, why? 
ANS- Tuple is immutable, we cannot add or remove once tuple is created
however, we can convert it into list and we can append the elements and again convert it back to tuple

Q44. Take a tuple as an input and print the count of elements in it. 
ANS- 		numbers = (1, 3, 4, 1, 6 ,1 )
count = numbers.count(1)
print('The count of 1 is:', count)
count = numbers.count(7)
print('The count of 7 is:', count)

Q45. What are sets in Python? 
 ANS- Sets are used to store multiple items in a single variable. Set is one of 4 built-in data types in Python used to store collections of data, the other 3 are List, Tuple, and Dictionary,

Q46. How can you create a set? 
 ANS- 	my_set = {1.0, "Hello", (1, 2, 3)}
print(my_set)

Q47. Create a set and add "iNeuron" in your set. 
 ANS- 		s1={123,"RAVEESH",321}
s1.add("iNeuron")
print(s1)

Q48. Try to add multiple values using add() function. 
ANS- 

Q49. How is update() different from add()? 
ANS- add () is intended for a single element, while .update () is for the introduction of other sets. add ( ) Add an element to a set. This has no effect if the element is already present. update ( ) Update a set with the union of itself and others.

Q50. What is clear() in sets? 
ANS- Python Set clear () method removes all elements from the set.

Q51. What is frozen set? 
ANS- Python frozenset () Method creates an immutable Set object from an iterable. It is a built-in Python function.

Q52. How is frozen set different from set? 
ANS-  Python has two built-in types for sets: set and frozenset. A set is a mutable object while frozenset provides an immutable

Q53. What is union() in sets? Explain via code. 
ANS- 		A = {2, 4, 5, 6}
       B = {4, 6, 7, 8}
       Print ("A U B:", A.union(B))

Q54. What is intersection() in sets? Explain via code. 
ANS- 	   	s1 = {1, 2, 3}
          s2 = {2, 3}
          print(s1.intersection(s2))

Q55. What is dictionary ibn Python? 
ANS- Dictionaries are Python's implementation of a data structure that is more generally known as an associative array.

Q56. How is dictionary different from all other data structures. 
 ANS- The dictionary Data Structure in Python is an unordered collection of items.

Q57. How can we delare a dictionary in Python? 
ANS- A Dictionary in python is declared by enclosing a comma-separated list of key-value pairs using curly braces({}).

Q58. What will the output of the following? 
var = {} 
print(type(var)) 
ANS-  <class 'dict'>
 The var() function is part of the standard library in Python and is used to get an object's _dict_ attribute.

Q59. How can we add an element in a dictionary? 
ANS- We can append to a dictionary in Python. It is done using the update() method.

Q60. Create a dictionary and access all the values in that dictionary. 
ANS-		 Dict = {1: 'Geeks', 2: 'For', 3: 'Geeks'}
              print(Dict)

Q61. Create a nested dictionary and access all the element in the inner dictionary. 
ANS- 

Q62. What is the use of get() function? 
ANS- The get() method returns the value of the item with the specified key.

Q63. What is the use of items() function? 
ANS- In Python Dictionary, items() method is used to return the list with all dictionary keys with values.

Q64. What is the use of pop() function? 
ANS- The pop() method removes the element at the specified position.


Q65. What is the use of popitems() function? 
ANS- Python popitem() Function - The popitem() function is used to remove the last item from a specified dictionary.

Q66. What is the use of keys() function? 
ANS- Python dictionary keys() function is used to return a view object that contains a list of all the keys in the dictionary.

Q67. What is the use of values() function? 
ANS- Python values() method is used to collect all the values from a dictionary.

Q68. What are loops in Python? 
ANS- Looping means repeating something over and over until a particular condition is satisfied.

Q69. How many type of loop are there in Python? 
ANS- There are two types of loops in Python, for and while.


Q70. What is the difference between for and while loops? 
ANS- For loop is used when the number of iterations is already known. While loop is used when the number of iterations is already Unknown.


Q71. What is the use of continue statement? 
ANS- The continue keyword is used to end the current iteration in a for loop (or a while loop), and continues to the next iteration.

Q72. What is the use of break statement? 
ANS- The break statement can be used if you need to break out of a for or while loop and move onto the next section of code.

Q73. What is the use of pass statement? 
ANS- It is used when a statement is required syntactically but you do not want any command or code to execute.

Q74. What is the use of range() function? 
ANS- The range() is an in-built function in Python. It returns a sequence of numbers starting from zero and increment by 1 by default and stops before the given number. It has three parameters, in which two are optional: start: It's an optional parameter used to define the starting point of the sequence.

Q75. How can you loop over a dictionary? 
ANS- We can loop through a dictionary by using a for loop. When looping through a dictionary, the return value are the keys of the dictionary, but there are methods to return the values as well.

### Coding problems

Q76. Write a Python program to find the factorial of a given number.
ANS-         def factorial(num):
                if num==0:
                    return 1
                else:
                    return num*factorial(num-1)

             num=int(input('Enter the number:'))
             print('The factorial of %d is %d'%(num,factorial(num)))
             
Q77. Write a Python program to calculate the simple interest. Formula to calculate simple interest is SI = (P*R*T)/100
ANS-
                     P = principal amount 
                     R = rate of interest 
                     T = time in years

                     amount = int(input("What is the principal amount? "))
                     rate = float(input("What is the rate of interest? "))
                     time = int(input("What is the time in years? "))

                     simple_interest = (amount * rate * time) / 100

                     print("The simple interest is", simple_interest)

Q78. Write a Python program to calculate the compound interest. Formula of compound interest is A = P(1+ R/100)^t.
ANS -
                    P =Principal, R = rate of interest, t = time in years.

                    A = Amount

                    principal=float(input("Enter the principal value:"))
                    rate=float(input("Enter the rate of interest:"))
                    time=int(input("Enter the time in years:"))
                    compound=principal*(pow((1+rate/100),time))
                    print("Compound interest is:",compound)
                    
Q79. Write a Python program to check if a number is prime or not.
ANS-
                  num = int(input("Enter a number: "))  

                  if num > 1:  
                     for i in range(2,num):  
                         if (num % i) == 0:  
                             print(num,"is not a prime number")  
                             break  
                     else:  
                         print(num,"is a prime number")  

                  else:  
                     print(num,"is not a prime number")
                     
Q80. Write a Python program to check Armstrong Number.
ANS- 
                  # Python program to check if the number is an Armstrong number or not

                  # take input from the user
                  num = int(input("Enter a number: "))

                  # initialize sum
                  sum = 0

                  # find the sum of the cube of each digit
                  temp = num
                  while temp > 0:
                     digit = temp % 10
                     sum += digit ** 3
                     temp //= 10

                  # display the result
                  if num == sum:
                     print(num,"is an Armstrong number")
                  else:
                     print(num,"is not an Armstrong number")
Q81. Write a Python program to find the n-th Fibonacci Number.
ANS- 
                 def Fibonacci(n):
                     if n<=0:
                         print("Incorrect input")
                     elif n==1:
                         return 0
                     elif n==2:
                         return 1
                     else:
                         return Fibonacci(n-1)+Fibonacci(n-2)

                 print(Fibonacci(9))

Q82. Write a Python program to interchange the first and last element in a list.
ANS -
                list_ = [2, 3, 6, 4, 5]
                list_[0], list_[-1] = list_[-1], list_[0]
                print(list_)
                
Q83. Write a Python program to swap two elements in a list.
ANS-
                def swap(x, y): 
                    return y, x 

                my_list = ['apple', 'mango', 'cherry'] 

                my_list[0], my_list[1] = swap(my_list[0], my_list[1]) 

                print(my_list)

Q84. Write a Python program to find N largest element from a list.
ANS- 
               list1 = [1,2,3,4,5,6]

               list1.sort()

               print(list1[-3:])
               
Q85. Write a Python program to find cumulative sum of a list.
ANS -
               # Sample List : [1, 2, 3, 4, 5, 6, 7, 8, 9]
               # Expected Output : [1, 3, 6, 10, 15, 21, 28, 36, 45]

               def findCumulativeSum(l):
                   return [sum(l[0:i+1]) for i in range(len(l))]

               print(findCumulativeSum([1, 2, 3, 4, 5, 6, 7, 8, 9]))
               
Q86. Write a Python program to check if a string is palindrome or not.
ANS -
         A palindrome is a word, phrase, number, or other sequence of symbols or elements, whose meaning may be interpreted the same way in either forward or reverse direction. Famous examples include "Amore, Roma", "A man, a plan, a canal: Panama" and "No 'x' in 'Nixon'". - Wikipedia

         def is_palindrome(s):
             return s == s[::-1]

         print(is_palindrome('aza'))
         print(is_palindrome('abcba'))
         print(is_palindrome('abab'))
         print(is_palindrome('123321'))
         print(is_palindrome('1234321'))
         
Q87. Write a Python program to remove i'th element from a string.
ANS -
          def remove_ith_element(string, i):  
              string = string[:i] + string[i+1:]  
              return string  
          string = 'programming'  
          i = 3  
          print(remove_ith_element(string, i))
          
Q88. Write a Python program to check if a substring is present in a given string.

Q89. Write a Python program to find words which are greater than given length k.

Q90. Write a Python program to extract unquire dictionary values.
ANS -
            d = {'red': 1, 'green': 2, 'blue': 3}
            for color_key, value in d.items():
               print(color_key, 'corresponds to ', d[color_key])
               
Q91. Write a Python program to merge two dictionary.
ANS -
             dict1 = {'a': 100, 'b': 200}
             dict2 = {'x': 300, 'y': 200}
             dict1.update(dict2)
             print(dict1)
             
Q92. Write a Python program to convert a list of tuples into dictionary.

Input : [('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]
Output : {'Sachin': 10, 'MSD': 7, 'Kohli': 18, 'Rohit': 45}
ANS-
          def convert_list_to_dict(input_list):
              return {input_list[i][0]: input_list[i][1] for i in range(len(input_list))}


          print(convert_list_to_dict([('Sachin', 10), ('MSD', 7), ('Kohli', 18), ('Rohit', 45)]))

Q93. Write a Python program to create a list of tuples from given list having number and its cube in each tuple.
Input: list = [9, 5, 6]
Output: [(9, 729), (5, 125), (6, 216)]
ANS -
              Input: list = [1, 2, 3, 4, 5]
              Output: [(1, 1), (2, 8), (3, 27), (4, 64), (5, 125)]

              list = [9, 5, 6] 
              res = [(i, i**3) for i in list] 
              print(res)

Q94. Write a Python program to get all combinations of 2 tuples.
Input : test_tuple1 = (7, 2), test_tuple2 = (7, 8)
Output : [(7, 7), (7, 8), (2, 7), (2, 8), (7, 7), (7, 2), (8, 7), (8, 2)]
ANS - 
         def all_combinations_2_tuples(test_tuple1, test_tuple2):
             final_list = []
             for tup1 in test_tuple1:
                 for tup2 in test_tuple2:
                     final_list.append((tup1, tup2))
             return final_list

         test_tuple1 = (7, 2)
         test_tuple2 = (7, 8)
         print("All combinations of 2 tuples: " + str(all_combinations_2_tuples(test_tuple1, test_tuple2)))
         
Q95. Write a Python program to sort a list of tuples by second item.

Input : [('for', 24), ('Geeks', 8), ('Geeks', 30)] 
Output : [('Geeks', 8), ('for', 24), ('Geeks', 30)]


Q96. Write a python program to print below pattern.
```
* 
* * 
* * * 
* * * * 
* * * * * 
```
Q97. Write a python program to print below pattern.
```
    *
   **
  ***
 ****
*****
```
ANS-
          n=5
          for i in range(n):
              for j in range(i):
                  print ('* ', end="")
              print('')

          for i in range(n,0,-1):
              for j in range(i):
                  print('* ', end="")
              print('')

Q98. Write a python program to print below pattern.
```
    * 
   * * 
  * * * 
 * * * * 
* * * * * 
```
ANS-
             word = input("Input a word to reverse: ")

             for char in range(len(word) - 1, -1, -1):
               print(word[char], end="")
             print("\n")

Q99. Write a python program to print below pattern.
```
1 
1 2 
1 2 3 
1 2 3 4 
1 2 3 4 5
```
ANS -
               n = int(input("Enter n: "))

               # Prime numbers are greater than 1
               if n > 1:
                  for i in range(2,n):
                      fact = 0
                      for j in range(2,i):
                          if (i % j) ==

Q100. Write a python program to print below pattern.
```
A 
B B 
C C C 
D D D D 
E E E E E 
```
ANS -
           k = 1
           for i in range(0,4):
               for j in range(0,i+1):
                   print(k,end=' ')
                   k += 1
               print()
